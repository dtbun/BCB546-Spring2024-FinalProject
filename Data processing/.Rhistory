#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
install.packages('gplots')
install.packages('tidyverse')
install.packages('tidyr')
install.packages('data.table')
install.packages('dplyr')
library(tidyverse)
library(tidyr)
library(data.table)
library(dplyr)
install.packages("dplyr")
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
library(tidyverse)
library(tidyselect)
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
# Iterate through each row
for (i in 1:nrow(count_data)) {
# Count the occurrences of 0 in the row
zeros_in_row <- sum(count_data[i, -1] == 0)
# If more than 50% of values in columns 2 to ncol(data) are zeros, store the row index
if (zeros_in_row < (ncol(count_data) - 1) / 2) {  # Exclude the first column
rows_to_keep <- c(rows_to_keep, i)
}
}
View(count_data)
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
#get rid of rownames (null) and then take the first column and conver to rownames
miRNAcount <- genecountsv2 %>%
`row.names<-`(., NULL) %>%
column_to_rownames(var = "miRNA")
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
#get rid of rownames (null) and then take the first column and conver to rownames
count_data <- count_data %>%
`row.names<-`(., NULL) %>%
column_to_rownames(var = "miRNA")
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
#get rid of rownames (null) and then take the first column and conver to rownames
count_data1 <- count_data %>%
`row.names<-`(., NULL) %>%
column_to_rownames(var = "miRNA")
View(count_data)
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
#get rid of rownames (null) and then take the first column and conver to rownames
count_data1 <- count_data %>%`row.names<-`(., NULL) %>% column_to_rownames(var = "miRNA")
#load necessary packages to do analysis
library(tidyverse)
library(tidyr)
library(data.table)
library(dplyr)
library(EnhancedVolcano)
library(DESeq2)
library(limma)
library(Glimma)
library(edgeR)
library(gplots)
library(tibble)
#open file and save to miRNA object
miRNA <- read_tsv("miRNA_filtered_final.txt")
#open file and save to miRNA object
miRNA <- read_tsv("miRNA_filtered_final.txt")
#select only the columns we need miRNA names using dplyr
genecounts <- dplyr::select(miRNA, c("miRNA","156_TAC 1_R1.fastq","157_TAC 2_R1.fastq", "541_TAC 3_R1.fastq", "612_TAC 4_R1.fastq", "631_TAC 5_R1.fastq", "533_TAC+PDE5AI 1_R1.fastq", "536_TAC+PDE5AI 2_R1.fastq", "627_TAC+PDE5AI 3_R1.fastq", "647_TAC+PDE5AI 4_R1.fastq", "697_TAC+PDE5AI 5_R1.fastq"))
#create old name for R to refer to when replacing
oldnames = c("156_TAC 1_R1.fastq","157_TAC 2_R1.fastq", "541_TAC 3_R1.fastq", "612_TAC 4_R1.fastq", "631_TAC 5_R1.fastq", "533_TAC+PDE5AI 1_R1.fastq", "536_TAC+PDE5AI 2_R1.fastq", "627_TAC+PDE5AI 3_R1.fastq", "647_TAC+PDE5AI 4_R1.fastq", "697_TAC+PDE5AI 5_R1.fastq")
#create new names to simplify the naming convention of samples
newnames = c("PO_1","PO_2", "PO_3", "PO_4", "PO_5", "PO_Sil_1", "PO_Sil_2", "PO_Sil_3", "PO_Sil_4", "PO_Sil_5")
#rename the columns with the simplified names
genecountsv2 <- genecounts %>% rename_with(~ newnames, all_of(oldnames))
#get rid of rownames (null) and then take the first column and conver to rownames
miRNAcount <- genecountsv2 %>%
`row.names<-`(., NULL) %>%
column_to_rownames(var = "miRNA")
# Creating a DGEList Object for differential gene expression analysis
DGE <- DGEList(counts=miRNAcount)
# Defining groups for the DGE object to know what to contrast against
group <- as.factor(c("PO", "PO", "PO", "PO", "PO", "PO_Sil", "PO_Sil", "PO_Sil", "PO_Sil","PO_Sil"))
# Renaming columns from the DGE object to match the names defined earlier
DGE$samples$group <- group
colnames(DGE) <- newnames
# Creating a data frame containing the miRNA names and adds it as a column to the DGE object.
miRNA <- row.names(DGE)
miRNA <- data.frame(miRNA)
DGE$miRNA <- miRNA
View(genecounts)
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
#get rid of rownames (null) and then take the first column and conver to rownames
count_data1 <- count_data %>% `row.names<-`(., NULL) %>% column_to_rownames(var = "miRNA")
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
# Iterate through each row
for (i in 1:nrow(count_data)) {
# Count the occurrences of 0 in the row
zeros_in_row <- sum(count_data[i, -1] == 0)
# If more than 50% of values in columns 2 to ncol(data) are zeros, store the row index
if (zeros_in_row < (ncol(count_data) - 1) / 2) {  # Exclude the first column
rows_to_keep <- c(rows_to_keep, i)
}
}
#Data Preprocessing as suggested by the paper
#Removing microRNA present in less than 50% of the samples
count_data = read_tsv("raw_mirna.txt")
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
# Iterate through each row
for (i in 2:nrow(count_data)) {
# Count the occurrences of 0 in the row
zeros_in_row <- sum(count_data[i, -1] == 0)
# If more than 50% of values in columns 2 to ncol(data) are zeros, store the row index
if (zeros_in_row < (ncol(count_data) - 1) / 2) {  # Exclude the first column
rows_to_keep <- c(rows_to_keep, i)
}
}
View(count_data)
#load the necessary packages:
library(dplyr)
library(tidyverse)
#load the necessary packages:
library(dplyr)
library(tidyverse)
# Read the data from the text file
countdata <- read.delim("raw_mirna.txt", header = TRUE, row.names = NULL )
# inspect the data:
View(countdata)
typeof(countdata) # we have a list
dim(countdata) # 1903 * 22: We have 1902 microRNA data on the rows and 21 samples on the column
str(countdata) # we have a data framem with 1903 observations and 22 variables. The microRNA names are characters, and the count data itself are integers. We have several biological replicates.
#Removing microRNA present in less than 50% of the samples
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
# Iterate through each row
for (i in 1:nrow(countdata)) {
# Count the occurrences of 0 in the row
zeros_in_row <- sum(countdata[i, -1] == 0)
# If more than 50% of values in columns 2 to ncol(data) are zeros, store the row index
if (zeros_in_row < (ncol(countdata) - 1) / 2) {  # Exclude the first column
rows_to_keep <- c(rows_to_keep, i)
}
}
#Removing microRNA present in less than 50% of the samples
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
# Iterate through each row
for (i in 1:nrow(countdata)) {
# Count the occurrences of 0 in the row
zeros_in_row <- sum(countdata[i, -1] == 0)
# If more than 50% of values in columns 2 to ncol(data) are zeros, store the row index
if (zeros_in_row < (ncol(countdata) - 1) / 2) {  # Exclude the first column
rows_to_keep <- c(rows_to_keep, i)
}
}
#Removing microRNA present in less than 50% of the samples
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
#change NAs to 0
countdata[is.na(d)] <- 0
#Removing microRNA present in less than 50% of the samples
# Initialize a counter for rows containing 0
zero_count <- 0
# Index to store rows with more than 50% of 0s
rows_to_keep <- numeric()
#change NAs to 0
countdata[is.na(countdata)] <- 0
# Iterate through each row
for (i in 1:nrow(countdata)) {
# Count the occurrences of 0 in the row
zeros_in_row <- sum(countdata[i, -1] == 0)
# If more than 50% of values in columns 2 to ncol(data) are zeros, store the row index
if (zeros_in_row < (ncol(countdata) - 1) / 2) {  # Exclude the first column
rows_to_keep <- c(rows_to_keep, i)
}
}
# Create a new dataframe containing rows with more than 50% of 0s
mirna_filtered <- countdata[rows_to_keep, ]    #Out of 1902 microRNA, 510 of them are present in more than 50% of the samples
View(mirna_filtered)
